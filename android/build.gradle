apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

ext {
    bintrayRepo = "AndroidCore"
    bintrayName = "com.unitbean.core"
    libraryName = "android"

    publishedGroupId = "com.unitbean.core"
    artifact = "android"
    libraryVersion = "0.8.8"

    libraryDescription = "Boilerplate Android code for UnitBean developers"
    siteUrl = 'https://github.com/unitbean/androidcore'
    gitUrl = 'https://github.com/unitbean/androidcore.git'
    developerId = 'UnitBean'
    developerName = 'Android developer'
    developerEmail = 'pocteg@gmail.com'
    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

repositories {
    mavenCentral()
}

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName libraryVersion
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

def verMoxy = '1.5.5'
def verKotlin = '1.3.0'
def verSupport = '28.0.0'
def verRetrofit = '2.4.0'
def verDagger = '2.17'
def verCoroutines='1.0.0'

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    testImplementation 'org.mockito:mockito-core:2.21.0'
    testImplementation 'org.assertj:assertj-core:3.9.1'
    testImplementation 'org.robolectric:robolectric:3.2.2'
    testImplementation 'org.robolectric:shadows-support-v4:3.3.2'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$verKotlin"

    // app compat
    api "com.android.support:appcompat-v7:$verSupport"
    api "com.android.support:support-v4:$verSupport"
    api "com.android.support:recyclerview-v7:$verSupport"
    api "com.android.support:cardview-v7:$verSupport"
    api "com.android.support:design:$verSupport"
    api "com.android.support:support-vector-drawable:$verSupport"
    api 'com.android.support.constraint:constraint-layout:1.1.3'

    //moxy
    api "com.arello-mobile:moxy:$verMoxy"
    api "com.arello-mobile:moxy-app-compat:$verMoxy"

    //retrofit 2
    api "com.squareup.retrofit2:retrofit:$verRetrofit"
    api "com.squareup.retrofit2:converter-gson:$verRetrofit"
    api "com.squareup.retrofit2:adapter-rxjava2:$verRetrofit"

    //logging interceptor
    api 'com.squareup.okhttp3:logging-interceptor:3.11.0'

    //rx android
    api 'io.reactivex.rxjava2:rxandroid:2.1.0'
    api 'io.reactivex.rxjava2:rxjava:2.2.2'

    //dagger 2
    api "com.google.dagger:dagger:$verDagger"

    // kotlin coroutines
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$verCoroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$verCoroutines"
}

/**
 * Создаёт JAR-файл библиотеки в ubutils/libs/jar
 */
task createJar(type: Copy) {
    from "$buildDir/intermediates/intermediate-jars/release/"
    into('libs/jar')
    include('classes.jar')
    rename('classes.jar', 'UbUtils.jar')
    exclude '**/BuildConfig.class'
    exclude '**/R.class'
    exclude '**/R$*.class'
}

if (project.rootProject.file('local.properties').exists()) {
    apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
    apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'
}