apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

ext {
    bintrayRepo = "AndroidCore"
    bintrayName = "com.unitbean.core"
    libraryName = "android"

    publishedGroupId = "com.unitbean.core"
    artifact = "android"
    libraryVersion = "0.9.10"

    libraryDescription = "Boilerplate Android code for UnitBean developers"
    siteUrl = 'https://github.com/unitbean/androidcore'
    gitUrl = 'https://github.com/unitbean/androidcore.git'
    developerId = 'UnitBean'
    developerName = 'Android developer'
    developerEmail = 'pocteg@gmail.com'
    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

repositories {
    mavenCentral()
}

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName libraryVersion
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

def verMoxy = '1.0.13'
def verRetrofit = '2.6.0'
def verDagger = '2.23.2'
def verCoroutines='1.2.1'

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    testImplementation 'org.mockito:mockito-core:2.21.0'
    testImplementation 'org.assertj:assertj-core:3.9.1'
    testImplementation 'org.robolectric:robolectric:3.2.2'
    testImplementation 'org.robolectric:shadows-support-v4:3.3.2'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // android x
    api 'androidx.appcompat:appcompat:1.0.2'
    api 'androidx.legacy:legacy-support-v4:1.0.0'
    api 'androidx.recyclerview:recyclerview:1.0.0'
    api 'androidx.cardview:cardview:1.0.0'
    api 'com.google.android.material:material:1.0.0'
    api 'androidx.vectordrawable:vectordrawable:1.0.1'
    api 'androidx.constraintlayout:constraintlayout:1.1.3'

    // moxy
    api "com.github.moxy-community:moxy:$verMoxy"
    api "com.github.moxy-community:moxy-androidx:$verMoxy"
    api "com.github.moxy-community:moxy-material:$verMoxy"

    // retrofit 2
    api "com.squareup.retrofit2:retrofit:$verRetrofit"
    api "com.squareup.retrofit2:converter-gson:$verRetrofit"
    api "com.squareup.retrofit2:adapter-rxjava2:$verRetrofit"

    // logging interceptor
    api 'com.squareup.okhttp3:logging-interceptor:3.12.1'

    // rx android
    api 'io.reactivex.rxjava2:rxandroid:2.1.1'
    api 'io.reactivex.rxjava2:rxjava:2.2.9'

    // dagger 2
    api "com.google.dagger:dagger:$verDagger"

    // kotlin coroutines
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$verCoroutines"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$verCoroutines"
}

/**
 * Создаёт JAR-файл библиотеки в ubutils/libs/jar
 */
task createJar(type: Copy) {
    from "$buildDir/intermediates/intermediate-jars/release/"
    into('libs/jar')
    include('classes.jar')
    rename('classes.jar', 'UbUtils.jar')
    exclude '**/BuildConfig.class'
    exclude '**/R.class'
    exclude '**/R$*.class'
}

if (project.rootProject.file('local.properties').exists()) {
    apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
    apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'
}